{"version":3,"file":"popup.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,iBAAiB,oDAAoD,qEAAqE,cAAc;AACxJ,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACsB;AACtB;AACA;AACA,wBAAwB,mCAAmC;AAC3D;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA,8CAA8C,sBAAsB;AACpE;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,kDAAkD,qBAAqB;AACvE,qCAAqC;AACrC;AACA;AACA,yEAAyE,uCAAuC;AAChH;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB,IAAI;AACrB;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,sCAAsC;AACxF,mEAAmE,kBAAkB;AACrF;AACA;AACA,UAAU;AACV,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA,IAAI;AACJ;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,kDAAkD,cAAc,WAAW,iBAAiB,gBAAgB;AAC5G,2BAA2B,mCAAmC;AAC9D;AACA;AACA,2GAA2G,UAAU;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oDAAoD,YAAY,SAAS;AACzE;AACA;AACA,yDAAyD;AACzD;AACA,gBAAgB;AAChB;AACA,aAAa;AACb;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA","sources":["webpack://my-webpack-project/./src/popup/popup.scss","webpack://my-webpack-project/webpack/bootstrap","webpack://my-webpack-project/webpack/runtime/make namespace object","webpack://my-webpack-project/./src/popup/popup.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport './popup.scss';\nvar ButtonPasteViewer = document.getElementById('pasteViewer');\nButtonPasteViewer.addEventListener('click', function () {\n    chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentTabId;\n            var _this = this;\n            return __generator(this, function (_a) {\n                currentTabId = tabs[0].id;\n                chrome.tabs.get(currentTabId, function (currentTab) { return __awaiter(_this, void 0, void 0, function () {\n                    var tab, response;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0: return [4 /*yield*/, chrome.scripting.executeScript({\n                                    target: { tabId: currentTab.id },\n                                    files: ['contentModalPaste.js']\n                                })];\n                            case 1:\n                                _a.sent();\n                                return [4 /*yield*/, chrome.scripting.insertCSS({\n                                        files: [\"contentModalPaste.css\"],\n                                        target: { tabId: currentTabId },\n                                    })];\n                            case 2:\n                                _a.sent();\n                                return [4 /*yield*/, chrome.tabs.query({ active: true, lastFocusedWindow: true })];\n                            case 3:\n                                tab = (_a.sent())[0];\n                                return [4 /*yield*/, chrome.tabs.sendMessage(tab.id, {\n                                        actions: 'isShowModal',\n                                        payload: true\n                                    })];\n                            case 4:\n                                response = _a.sent();\n                                return [2 /*return*/];\n                        }\n                    });\n                }); });\n                return [2 /*return*/];\n            });\n        });\n    });\n});\n// chrome.runtime.sendMessage('viewers', response => {\n//     console.log(JSON.parse(response), 'response msg');\n// })\n// const tbody = document.querySelector('.tbody')\n// const tbodyStorage = document.querySelector('.tbodyStorage')\n// const isSortViewer = document.getElementById('sortIsCheck') as HTMLInputElement\n// const buttonPasteJS = document.getElementById('button')\n// console.log(\"🚀 ~ file: popup.ts:11 ~ buttonPasteJS:\", buttonPasteJS)\n// setInterval(() => {\n//     (async () => {\n//         const [tab] = await chrome.tabs.query({active: true, lastFocusedWindow: true});\n//         const response = await chrome.tabs.sendMessage(tab.id, {greeting: \"hello\"});\n//         // do something with response here, not outside the function\n//         console.log(response);\n//       })();\n// }, 1000)\n// buttonPasteJS.addEventListener('click', () => {\n//     console.log(1231);\n//     // console.log(\"🚀 ~ file: popup.ts:24 ~ chrome.tabs.onActivated.addListener ~ tab:\", tab)\n// })\n// chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n//     const viewers = request.message.payload as Viewer[]\n//     if (request.action !== \"viewers\") return\n//     console.log(\"🚀 ~ file: popup.ts:11 ~ request:\", request)\n//     console.log(\"🚀 ~ file: popup.ts:11 ~ viewers:\", viewers)\n//     const renderViewers = viewers.filter(item => item.Name)\n//     isSortViewer.addEventListener('click', () => {\n//         console.dir(isSortViewer?.checked)\n//         for (const item of viewers) {\n//             const row = document.createElement('tr')\n//             const cellName = document.createElement('td')\n//             cellName.innerText = item.Caption\n//             const cellPlus = document.createElement('td')\n//             cellPlus.innerText = '+'\n//             cellPlus.setAttribute('id', item.Id)\n//             cellPlus.onclick = (e: any) => {\n//                 // console.log(e.target.getAttribute('id'));\n//                 const id = e.target.getAttribute('id')\n//                 addIdViewersStorage(id, viewers)\n//             }\n//             row.append(cellName)\n//             row.append(cellPlus)\n//             tbody.append(row)\n//         }\n//     })\n// });\n// const addNestedTable = (viewers: any, resetTable?: boolean) => {\n//     if (resetTable) tbodyStorage.innerHTML = ''\n//     for (const currentView of viewers) {\n//         const row = document.createElement('tr')\n//         const cellName = document.createElement('td')\n//         cellName.innerText = currentView.Caption\n//         const cellMinus = document.createElement('td')\n//         cellMinus.innerText = '-'\n//         cellMinus.onclick = () => {\n//             deleteView(currentView.Id)\n//         }\n//         const cellPaste = document.createElement('td')\n//         cellPaste.onclick = () => {\n//             // insertInEntities(currentView)\n//         }\n//         cellPaste.innerText = 'Вставить'\n//         row.append(cellName)\n//         row.append(cellMinus)\n//         row.append(cellPaste)\n//         tbodyStorage.append(row)\n//     }\n// }\n// chrome.storage.onChanged.addListener((changes, namespace) => {\n//     for (let [key, { oldValue, newValue }] of Object.entries(changes)) {\n//         const viewers = newValue && JSON.parse(newValue)\n//         addNestedTable(viewers, true)\n//     }\n// });\n// const addIdViewersStorage = async (id: any, viewers: any[]) => {\n//     const currentView = viewers?.find((item: { Id: any; }) => item.Id === id)\n//     chrome.storage.local.get([\"viewersState\"], function (result) {\n//         const allView = result.viewersState && JSON.parse(result.viewersState)\n//         const saveViewersStorage = Array.isArray(allView) ? allView : []\n//         saveViewersStorage.push(currentView)\n//         console.log(\"🚀 ~ saveViewersStorage:\", saveViewersStorage)\n//         chrome.storage.local.set({\n//             viewersState: JSON.stringify(saveViewersStorage)\n//         }, function () {\n//             console.log(\"Данные сохранены\");\n//         });\n//     });\n// }\n// const renderSaveViewers = async () => {\n//     chrome.storage.local.get([\"viewersState\"], function (result) {\n//         console.log(\"🚀 ~ result:\", result.viewersState)\n//         const viewers = result.viewersState && JSON.parse(result.viewersState)\n//         viewers && addNestedTable(viewers)\n//     });\n// }\n// renderSaveViewers()\n// const insertInEntities = async (currentView: { Caption: any; Icon: any; Attributes: any; Settings: any; }) => {\n//     chrome.tabs.query({ active: true, currentWindow: true }, async function (tabs) {\n//         const idEntites = getParamFromUrl(tabs[0].url).id\n//         try {\n//             const responseCreate = await fetch(`https://pdm-kueg.io.neolant.su/api/structure/entities/${idEntites}/viewers`, {\n//                 method: \"POST\",\n//                 body: JSON.stringify({\n//                     \"Name\": \"VIEWER_EXTERNAL\",\n//                     \"Caption\": currentView.Caption,\n//                     \"Icon\": currentView.Icon,\n//                     \"Attributes\": currentView.Attributes,\n//                     \"Settings\": currentView.Settings\n//                 }),\n//                 headers: {\n//                     \"Accept\": \"application/json, text/plain, /\",\n//                     \"Accept-Encoding\": \"gzip, deflate, br\",\n//                     \"Accept-Language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n//                     \"Connection\": \"keep-alive\",\n//                     \"Content-Length\": \"103\",\n//                     \"Content-Type\": \"application/json;charset=UTF-8\"\n//                 }\n//             }).then(_ => _.json())\n//             console.log(responseCreate)\n//         } catch (error) {\n//             console.log(\"🚀 ~ error:\", error)\n//         }\n//     })\n// }\n// const deleteView = (id: string) => {\n//     chrome.storage.local.get([\"viewersState\"], function (result) {\n//         const allView = result.viewersState && JSON.parse(result.viewersState)\n//         const saveViewersStorage = allView.filter((item: any) => item.Id !== id)\n//         chrome.storage.local.set({\n//             viewersState: JSON.stringify(saveViewersStorage)\n//         }, function () {\n//             console.log(\"Данные сохранены\");\n//         });\n//     });\n// }\n// const getParamFromUrl = (url: string) => {\n//     // Разбиваем строку запроса на отдельные параметры\n//     const params = new URLSearchParams(url);\n//     // Создаем пустой объект для хранения параметров\n//     const paramsObj: Record<string, string> = {};\n//     // Проходимся по всем параметрам и добавляем их в объект\n//     params.forEach((value, key) => {\n//         const keyArr = key?.split(\"?\")\n//         const keyValue = keyArr.length > 1 ? keyArr[1] : keyArr[0]\n//         paramsObj[keyValue] = value;\n//     });\n//     return paramsObj\n// }\n"],"names":[],"sourceRoot":""}